// Animation manifest defines filename-based animations and playback policies
// Auto-generated file list: see manifest.generated.json produced by scripts/scan-animations.mjs

export type LoopPolicy = 'repeat' | 'once'

export type AnimationSpec = {
  id: string // exact filename, e.g., "Manny_Swim.glb"
  path: string // relative URL under public, e.g., "/models/animations/Manny_Swim.glb"
  clipIndex?: number // which clip to use from the GLB; defaults to 0
  clipName?: string // preferred clip name when GLB contains multiple
  loop: LoopPolicy // repeat or once
  speed?: number // playback speed multiplier
}

const BASE = (import.meta as any).env?.BASE_URL || '/'

// Helper to build full path under the current BASE_URL
const p = (file: string) => `${BASE}models/animations/${file}`

// Bring in the generated list of available .glb files
// Generated by: node scripts/scan-animations.mjs
// Shape: { files: string[] } - typed via src/types/manifest.generated.json.d.ts
import filesJson from './manifest.generated.json'

// Optional per-file overrides (clip names, loop policy, speed, etc.)
const OVERRIDES: Record<string, Partial<AnimationSpec>> = {
  'Manny_Swim.glb': { clipName: 'Swim', speed: 0.5 },
  'Manny_Kick.glb': { clipName: 'Kick', speed: 0.5 },
  'Kick_pass.glb': { clipName: 'Kick', speed: 0.5 },
  'Walk.glb': { clipName: 'Walk', speed: 0.5 },
  'Stand.glb': { clipName: 'Stand', speed: 0.5 },
  'LongSit.glb': { clipName: 'LongSit', speed: 0.5 },
  'Sit.glb': { clipName: 'Sit', speed: 0.5 },
}

export const ANIMATIONS: AnimationSpec[] = (filesJson?.files ?? []).map((id: string) => ({
  id,
  path: p(id),
  loop: 'repeat',
  speed: 0.5,
  ...(OVERRIDES[id] || {}),
}))

export const DEFAULT_ANIMATION_ID = 'Stand.glb'

/**
 * Format animation ID for display in UI
 * Removes .glb extension and cleans up naming conventions
 */
export const formatAnimationName = (id: string): string => {
  return id
    .replace(/\.glb$/i, '') // Remove .glb extension
    .replace(/_/g, ' ') // Replace underscores with spaces
    .replace(/\b\w/g, (char) => char.toUpperCase()) // Capitalize first letter of each word
}

/**
 * Get display name for an animation
 */
export const getAnimationDisplayName = (id: string): string => {
  // Check for custom display names
  const customNames: Record<string, string> = {
    'Sit_Lknee_ex.glb': 'Sit - Left Knee Extension',
    'Sit_Rknee_ex.glb': 'Sit - Right Knee Extension',
    'Kick_pass.glb': 'Kick Pass',
    'LongSit.glb': 'Long Sit',
    'Manny_Kick.glb': 'Kick',
    'Manny_Swim.glb': 'Swim',
  }

  return customNames[id] || formatAnimationName(id)
}
