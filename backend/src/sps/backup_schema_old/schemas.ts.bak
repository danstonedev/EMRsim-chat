import { z } from 'zod';

export const zScreeningChallenge = z.object({
  id: z.string(), flag: z.enum(["red","yellow"]),
  cue_intent: z.string(), semantic_tags: z.string().array().optional(),
  delivery_guidelines: z.string().array().optional(),
  example_phrases: z.string().array().optional(),
  reveal_triggers: z.string().array(),
  learning_objectives: z.string().array()
});
export const zSpecialQuestion = z.object({
  id: z.string(),
  region: z.enum(["ankle_foot","knee","cervical_spine","shoulder","sports_trauma_general","hip"]),
  student_prompt_patterns: z.string().array(),
  patient_cue_intent: z.string(),
  delivery_guidelines: z.string().array().optional(),
  example_phrases: z.string().array().optional(),
  instructor_imaging_note: z.string(),
  refs: z.string().array().optional()
});
export const zDOBChallenge = z.object({
  style: z.enum(["straightforward","clarification","humor","privacy","misstatement","partial","deflection","annoyance","roleplay","delayed"]),
  example_response: z.string(),
  learning_objectives: z.string().array().optional()
});
export const zPersona = z.object({
  patient_id: z.string(),
  demographics: z.object({
    name: z.string(), preferred_name: z.string().optional(), pronouns: z.string().optional(),
    age: z.number().int(), sex: z.string(), occupation: z.string(), sport_activity: z.string().optional(),
    education_health_literacy: z.enum(["low","moderate","high"]),
    primary_language: z.string().optional(), dob: z.string().regex(/^\d{4}-\d{2}-\d{2}$/)
  }),
  social_context: z.any().optional(),
  function_context: z.any().optional(),
  beliefs_affect: z.any().optional(),
  medical_baseline: z.any().optional(),
  dialogue_style: z.any(),
  hidden_agenda: z.any().optional(),
  closure_style: z.any().optional(),
  dob_challenges: zDOBChallenge.array().optional()
});

export const zICF = z.object({
  health_condition: z.string(),
  body_functions_structures: z.string().array(),
  activities: z.string().array(),
  participation: z.string().array(),
  environmental_factors: z.string().array(),
  personal_factors: z.string().array()
});
export const zSubjectiveItem = z.object({
  id: z.string(),
  label: z.string(),
  patterns: z.string().array(),
  patient_response_script: z.object({
    qualitative: z.string().array().optional(),
    numeric: z.record(z.union([z.number(), z.string()])).optional(),
    binary_flags: z.record(z.union([z.boolean(), z.string()])).optional()
  }),
  notes: z.string().optional()
});
export const zObjectiveFinding = z.object({
  test_id: z.string(), label: z.string(),
  region: z.enum(["ankle_foot","knee","cervical_spine","shoulder","sports_trauma_general","hip"]),
  expected_finding: z.string().optional(), // NEW: natural language description of expected findings
  preconditions: z.string().array().optional(),
  contraindications: z.string().array().optional(),
  instructions_brief: z.string().optional(),
  patient_output_script: z.object({
    numeric: z.record(z.union([z.number(), z.string()])).optional(),
    qualitative: z.string().array().optional(),
    binary_flags: z.record(z.union([z.boolean(), z.string()])).optional()
  }).optional(), // Made optional for backward compatibility
  guardrails: z.object({
    data_only: z.boolean().optional(),
    deflection_lines: z.string().array().optional(),
    refuse_if_contraindicated: z.boolean().optional()
  }).optional()
});
export const zClinicalScenario = z.object({
  scenario_id: z.string(), title: z.string(),
  region: z.enum(["ankle_foot","knee","cervical_spine","shoulder","sports_trauma_general","hip"]),
  setting: z.enum(["primary_care_pt","sports_rehab","post_op","acute","telehealth","outpatient_pt","sports_pt_outpatient","sports_medicine_outpatient","sports_rehab_clinic"]).optional(),
  difficulty: z.enum(["easy","moderate","advanced"]).optional(),
  tags: z.string().array().optional(),
  presenting_problem: z.object({
    primary_dx: z.string(), onset: z.enum(["acute","gradual","insidious"]),
    onset_detail: z.string().optional(),
    duration_weeks: z.number().int(), dominant_symptoms: z.string().array(),
    pain_nrs_rest: z.number().min(0).max(10).optional(),
    pain_nrs_activity: z.number().min(0).max(10).optional(),
    aggravators: z.string().array().optional(),
    easers: z.string().array().optional(),
    pattern_24h: z.string().optional(),
    red_flags_ruled_out: z.boolean().optional()
  }),
  icf: zICF,
  scenario_context: z.object({
    goals: z.string().array().optional(),
    role_impacts: z.string().array().optional(),
    environment: z.string().optional(),
    instructor_notes: z.string().optional()
  }).optional(),
  symptom_fluctuation: z.object({
    with_time: z.string().optional(),
    with_activity: z.string().optional(),
    during_session_examples: z.string().array().optional()
  }).optional(),
  screening_challenge_ids: z.string().array().optional(),
  special_question_ids: z.string().array().optional(),
  subjective_catalog: zSubjectiveItem.array().optional(),
  objective_catalog: zObjectiveFinding.array(),
  objective_guardrails: z.object({
    never_volunteer_data: z.boolean().optional(),
    require_explicit_physical_consent: z.boolean().optional(),
    fatigue_prompt_threshold: z.number().int().optional(),
    deflection_lines: z.string().array().optional()
  }).optional(),
  guardrails: z.object({
    min_age: z.number().int().optional(),
    max_age: z.number().int().optional(),
    sex_required: z.enum(["male","female"]).optional(),
    disallow_medications: z.string().array().optional(),
    impact_testing_unsafe: z.boolean().optional()
  }).optional()
});
