name: EMRsim-chat CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    name: Test and Lint
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: emrsim_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Type check
        run: npm run typecheck

      - name: Unit tests
        run: npm run test:unit

      - name: Integration tests
        run: npm run test:integration
        env:
          DB_TYPE: postgres
          PG_HOST: localhost
          PG_PORT: 5432
          PG_DATABASE: emrsim_test
          PG_USER: postgres
          PG_PASSWORD: postgres

      - name: Upload code coverage
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  e2e:
    name: End-to-End Tests
    runs-on: ubuntu-latest
    needs: test

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: emrsim_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Set up test database
        run: npm run db:setup:test
        env:
          DB_TYPE: postgres
          PG_HOST: localhost
          PG_PORT: 5432
          PG_DATABASE: emrsim_test
          PG_USER: postgres
          PG_PASSWORD: postgres

      - name: Run E2E tests
        run: npm run test:e2e
        env:
          DB_TYPE: postgres
          PG_HOST: localhost
          PG_PORT: 5432
          PG_DATABASE: emrsim_test
          PG_USER: postgres
          PG_PASSWORD: postgres

  build:
    name: Build and Analyze
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Shallow clones should be disabled for better analysis

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Analyze bundle size
        run: npm run analyze

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: frontend-build
          path: dist/
          retention-days: 5
